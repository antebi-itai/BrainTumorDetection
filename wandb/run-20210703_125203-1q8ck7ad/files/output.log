> /home/labs/waic/itaian/BrainTumorDetection/train.py(37)train()
     35 def train(model, criterion, accuracy, optimizer, train_loader, test_loader, epochs, device):
     36     import pdb; pdb.set_trace()
---> 37     for epoch in tqdm(range(epochs)):
     38         for (images, tumor_types), (test_images, test_tumor_types) in zip(train_loader, cycle(test_loader)):
     39             # train
  0%|          | 0/4 [00:00<?, ?it/s]
> /home/labs/waic/itaian/BrainTumorDetection/train.py(38)train()
     36     import pdb; pdb.set_trace()
     37     for epoch in tqdm(range(epochs)):
---> 38         for (images, tumor_types), (test_images, test_tumor_types) in zip(train_loader, cycle(test_loader)):
     39             # train
     40             model_acc = train_loop(model=model, criterion=criterion, accuracy=accuracy, optimizer=optimizer, device=device,
> /home/labs/waic/itaian/BrainTumorDetection/train.py(40)train()
     38         for (images, tumor_types), (test_images, test_tumor_types) in zip(train_loader, cycle(test_loader)):
     39             # train
---> 40             model_acc = train_loop(model=model, criterion=criterion, accuracy=accuracy, optimizer=optimizer, device=device,
     41                        images=images, tumor_types=tumor_types, mode="Train")
     42             # test
> /home/labs/waic/itaian/BrainTumorDetection/train.py(41)train()
     39             # train
     40             model_acc = train_loop(model=model, criterion=criterion, accuracy=accuracy, optimizer=optimizer, device=device,
---> 41                        images=images, tumor_types=tumor_types, mode="Train")
     42             # test
     43             model_acc = train_loop(model=model, criterion=criterion, accuracy=accuracy, optimizer=optimizer, device=device,
> /home/labs/waic/itaian/BrainTumorDetection/train.py(40)train()
     38         for (images, tumor_types), (test_images, test_tumor_types) in zip(train_loader, cycle(test_loader)):
     39             # train
---> 40             model_acc = train_loop(model=model, criterion=criterion, accuracy=accuracy, optimizer=optimizer, device=device,
     41                        images=images, tumor_types=tumor_types, mode="Train")
     42             # test
--Call--
> /home/labs/waic/itaian/BrainTumorDetection/train.py(51)train_loop()
     49
     50
---> 51 def train_loop(model, criterion, accuracy, optimizer, device, images, tumor_types, mode="Train"):
     52     # Move to device
     53     images, tumor_types = images.to(device=device), tumor_types.to(device=device)
> /home/labs/waic/itaian/BrainTumorDetection/train.py(53)train_loop()
     51 def train_loop(model, criterion, accuracy, optimizer, device, images, tumor_types, mode="Train"):
     52     # Move to device
---> 53     images, tumor_types = images.to(device=device), tumor_types.to(device=device)
     54     # Run the model on the input batch
     55     pred_tumors_scores = model(images)
'Train'
> /home/labs/waic/itaian/BrainTumorDetection/train.py(55)train_loop()
     53     images, tumor_types = images.to(device=device), tumor_types.to(device=device)
     54     # Run the model on the input batch
---> 55     pred_tumors_scores = model(images)
     56
     57     model_acc = None
RuntimeError: CUDA out of memory. Tried to allocate 3.12 GiB (GPU 0; 31.75 GiB total capacity; 28.10 GiB already allocated; 1.07 GiB free; 29.45 GiB reserved in total by PyTorch)
> /home/labs/waic/itaian/BrainTumorDetection/train.py(55)train_loop()
     53     images, tumor_types = images.to(device=device), tumor_types.to(device=device)
     54     # Run the model on the input batch
---> 55     pred_tumors_scores = model(images)
     56
     57     model_acc = None
--Return--
None
> /home/labs/waic/itaian/BrainTumorDetection/train.py(55)train_loop()
     53     images, tumor_types = images.to(device=device), tumor_types.to(device=device)
     54     # Run the model on the input batch
---> 55     pred_tumors_scores = model(images)
     56

  0%|          | 0/4 [00:24<?, ?it/s]
RuntimeError: CUDA out of memory. Tried to allocate 3.12 GiB (GPU 0; 31.75 GiB total capacity; 28.10 GiB already allocated; 1.07 GiB free; 29.45 GiB reserved in total by PyTorch)
> /home/labs/waic/itaian/BrainTumorDetection/train.py(40)train()
     38         for (images, tumor_types), (test_images, test_tumor_types) in zip(train_loader, cycle(test_loader)):
     39             # train
---> 40             model_acc = train_loop(model=model, criterion=criterion, accuracy=accuracy, optimizer=optimizer, device=device,
     41                        images=images, tumor_types=tumor_types, mode="Train")
     42             # test
--Return--
None
> /home/labs/waic/itaian/BrainTumorDetection/train.py(40)train()
     38         for (images, tumor_types), (test_images, test_tumor_types) in zip(train_loader, cycle(test_loader)):
     39             # train
---> 40             model_acc = train_loop(model=model, criterion=criterion, accuracy=accuracy, optimizer=optimizer, device=device,
     41                        images=images, tumor_types=tumor_types, mode="Train")
     42             # test
RuntimeError: CUDA out of memory. Tried to allocate 3.12 GiB (GPU 0; 31.75 GiB total capacity; 28.10 GiB already allocated; 1.07 GiB free; 29.45 GiB reserved in total by PyTorch)
> /home/labs/waic/itaian/BrainTumorDetection/experiment.py(38)train_model()
     36     """
     37     def train_model(self):
---> 38         train(model=self.model, criterion=self.criterion, accuracy=self.accuracy,
     39               optimizer=self.optimizer, train_loader=self.train_loader, test_loader=self.test_loader,
     40               epochs=self.epochs, device=self.device)
--Return--
None
> /home/labs/waic/itaian/BrainTumorDetection/experiment.py(38)train_model()
     36     """
     37     def train_model(self):
---> 38         train(model=self.model, criterion=self.criterion, accuracy=self.accuracy,
     39               optimizer=self.optimizer, train_loader=self.train_loader, test_loader=self.test_loader,
     40               epochs=self.epochs, device=self.device)
RuntimeError: CUDA out of memory. Tried to allocate 3.12 GiB (GPU 0; 31.75 GiB total capacity; 28.10 GiB already allocated; 1.07 GiB free; 29.45 GiB reserved in total by PyTorch)
> <ipython-input-13-723129dddbb0>(19)<module>()
     16 experiment = Experiment(config)
     17 # train
     18 with wandb.init(project="BrainTumorDetection", config=config):
---> 19     experiment.train_model()
     20     #heat_map = experiment.generate_heatmap(r"./Data/Testing/glioma_tumor/image.jpg")
--KeyboardInterrupt--
KeyboardInterrupt: Interrupted by user